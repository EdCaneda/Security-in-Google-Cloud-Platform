A distributed-denial-of-service or DDoS attack is a malicious attempt to disrupt normal traffic of a targeted server, service, or network by overwhelming the target or its surrounding infrastructure with a flood of Internet traffic from multiple sources. 
attackers build networks of infected computers known as botnets by spreading malicious software through emails, websites, or social media. Once infected, these machines can be controlled remotely without the owner's knowledge, and they are used like an army to launch an attack against any target. Some botnets are actually millions of machines strong. 
[For context, a huge attack in 2017 had the strength of around one terabit per second. For reference, the whole Internet has a bisection bandwidth of 200 terabits per second. Now, when you compare this to a single Google data center, which has a bisection bandwidth of 1300 terabits per second, you can see we have an internal capacity, many times that of the traffic load, we anticipate. This means that when there is an attack, we have time to isolate it and address it.]

DDoS prevention techniques:
Leverage load balancer [Placing a load balancer in front of your services will filter known bad traffic streams before they reach your resources. GCP offers transport layer four e.g. UDP or TCP, and application layer seven e.g. HTTP or HTTPS load balancing. Layer four load balancers automatically protect against things like UDP floods on TCP syn floods. The layer seven load balances provide layer four protections plus protection from connection-based attacks such as slow lowers. If the system detects an attack, it will automatically configure the load balances to drop or throttle traffic]
reduce attack surface in VPNs [by - isolate machines within VPCs, set up firewall rules to block unused ports, use firewall rules to block unwanted sources, use firewall tags and service accounts to control targets, control individual ingress and egress traffic for computer resources using firewall rules]
isolate internal traffic [can also connect to your on-premise network with VPC network using VPN IPSec tunnels or dedicated Interconnect.]
use cloud CDN [CDN is used to cache web content at over 90 edge locations or points of presence, POPs, across the globe. Cloud CDN provides very similar protection as the Google load balancer plus requests for your content is routed to Google's POPs rather than your resources which allows our resilient infrastructure to absorb attacks at the edge of Google's network. This also naturally reduces the load on your network origin's even when there are no attacks.]
use API management and monitoring [Putting an API Gateway or API management in front of your back-end services can help prevent Denial of Service attacks by throttling requests to limit the number of requests per client, controlling access to APIs from a single centralized location, and the ability to monitor and track all API usage. In Google Cloud Platform, there are two options for implementing API Management; Cloud Endpoints and Appigee]
*leverage cloud armor [Cloud Armor works with the global HTTPS load balancer to provide built-in defenses against infrastructure DDoS attacks. Additionally, Cloud Armor enables you to customize your defenses and mitigate multi-vector attacks. Such as enforcing access control to allow or restrict user traffic based on IP version four, or IP version six addresses or sider. Cloud Armor also works with security offerings from security partners, enabling you to build a comprehensive security model for your GCP services. Cloud Armor defense is customized using a security policy, which can contain one or more rules. Rules tell your security policy what to do, the action, when to do it, the condition, and where to apply the rule, the target. Cloud Armor also provides several predefined rules to defend against cross-site scripting and sequel injection, application aware attacks. ]

