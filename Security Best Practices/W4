Common Application vulnerabilities:
injection flaws - SQL, LDAP, HTML [Injection flaws occur when some form of malicious content can be injected into an application from an app attacker and the application will then accept and interpret that content]
XSS cross-site scripting - a form of injection where the attacker is able to inject JavaScript in to an application, and the code injection originates from a different site. Cross-site scripting allows attackers to execute scripts in the victims' browser, which can then hijack user session, deface websites, and redirect the user to other malicious sites. 
weak authentication and access control [and session management] [allows attackers to compromise passwords, keys, or session tokens all to exploit implementation flaws to assume other users' identities]
sensitive data exposure [at rest or in transit; encrypt]
security misconfiguration [a result of insecure default configurations, incomplete or ad-hoc configurations, open cloud storage, misconfigured HTTP headers. And also verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must also be patched, upgraded, in a timely fashion in order to keep them secure]
using components with known vulnerabilities

Cloud Security Scanner can check: XSS, flash injection, mixed content, [HTTP and HTTPS] clear text passwords and use of insecure/outdated JS libraries. The scanner can and almost certainly will change state data in your application, so it should always be used with caution. For example, when scanning a blog application that allows public comments, Cloud security scanner may post test strings as comments on all your blog articles. In an email sign-up page, cloud security scanner may generate large numbers of test emails. 
to avoid unwanted impact: run scans in test environment, use test accounts, block specific UI elements, block specific URLs, use backup data.

Lab: use the Cloud Security Scanner to detect, fix and verify a vulnerability in an App Engine application.

OAuth phishing is a type of credential phishing that takes advantage of the open authentication, OAuth standard, to gain access to user accounts without needing to know the user's password. OAuth phishing exploits the trust relationship users have with their well-known online service providers, as well as the trust relationships those providers have with their own third party applications. It is accomplished by tricking users into granting persistent access to their accounts.
OAuth phishing attacks do not use the typical approach used in email phishing i.e. spoofed URL links, signing requests or attached files. This makes this type of phishing more difficult for a less experienced user to detect and may produce a higher rate of success for the hacker. In some cases, that deception is very well-designed and may even affect more experienced and competent users. 
Cloud Identity-Aware Proxy or Cloud IAP provides a central authentication and authorization layer for your applications over HTTPS. Cloud IAP replaces end-user VPN tunnels or the need to apply an authentication and authorization layer in front of your web application hosted on GCP. 

Lab: Configure the OAuth consent screen, setup cloud IP access, and enable cloud IP. 
